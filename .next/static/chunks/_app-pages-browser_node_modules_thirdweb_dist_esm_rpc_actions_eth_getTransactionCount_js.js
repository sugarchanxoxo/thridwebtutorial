"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_rpc_actions_eth_getTransactionCount_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getTransactionCount.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/rpc/actions/eth_getTransactionCount.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eth_getTransactionCount: () => (/* binding */ eth_getTransactionCount)\n/* harmony export */ });\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n\n/**\n * Retrieves the transaction count (nonce) for a given Ethereum address.\n * @param request - The EIP1193 request function.\n * @param params - The parameters for retrieving the transaction count.\n * @returns A promise that resolves to the transaction count as a number.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_getTransactionCount } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const transactionCount = await eth_getTransactionCount(rpcRequest, {\n *  address: \"0x...\",\n * });\n * ```\n */\nasync function eth_getTransactionCount(request, params) {\n    const count = await request({\n        method: \"eth_getTransactionCount\",\n        params: [\n            params.address,\n            // makes sense to default to `pending` here, since we're asking for a transaction count (nonce)\n            params.blockNumber\n                ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(params.blockNumber)\n                : params.blockTag || \"pending\",\n        ],\n    });\n    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber)(count);\n}\n//# sourceMappingURL=eth_getTransactionCount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9ycGMvYWN0aW9ucy9ldGhfZ2V0VHJhbnNhY3Rpb25Db3VudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3Q0FBd0M7QUFDcEQscUNBQXFDLGVBQWU7QUFDcEQ7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUVBQVc7QUFDN0I7QUFDQTtBQUNBLEtBQUs7QUFDTCxXQUFXLG1FQUFXO0FBQ3RCO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9taWluYWRvaS9EZXNrdG9wL2dpdGh1YlByb2plY3QvdGhyaWR3ZWJ0dXRvcmlhbC9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vcnBjL2FjdGlvbnMvZXRoX2dldFRyYW5zYWN0aW9uQ291bnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGV4VG9OdW1iZXIsIG51bWJlclRvSGV4IH0gZnJvbSBcIi4uLy4uL3V0aWxzL2VuY29kaW5nL2hleC5qc1wiO1xuLyoqXG4gKiBSZXRyaWV2ZXMgdGhlIHRyYW5zYWN0aW9uIGNvdW50IChub25jZSkgZm9yIGEgZ2l2ZW4gRXRoZXJldW0gYWRkcmVzcy5cbiAqIEBwYXJhbSByZXF1ZXN0IC0gVGhlIEVJUDExOTMgcmVxdWVzdCBmdW5jdGlvbi5cbiAqIEBwYXJhbSBwYXJhbXMgLSBUaGUgcGFyYW1ldGVycyBmb3IgcmV0cmlldmluZyB0aGUgdHJhbnNhY3Rpb24gY291bnQuXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgdHJhbnNhY3Rpb24gY291bnQgYXMgYSBudW1iZXIuXG4gKiBAcnBjXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGdldFJwY0NsaWVudCwgZXRoX2dldFRyYW5zYWN0aW9uQ291bnQgfSBmcm9tIFwidGhpcmR3ZWIvcnBjXCI7XG4gKiBjb25zdCBycGNSZXF1ZXN0ID0gZ2V0UnBjQ2xpZW50KHsgY2xpZW50LCBjaGFpbiB9KTtcbiAqIGNvbnN0IHRyYW5zYWN0aW9uQ291bnQgPSBhd2FpdCBldGhfZ2V0VHJhbnNhY3Rpb25Db3VudChycGNSZXF1ZXN0LCB7XG4gKiAgYWRkcmVzczogXCIweC4uLlwiLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV0aF9nZXRUcmFuc2FjdGlvbkNvdW50KHJlcXVlc3QsIHBhcmFtcykge1xuICAgIGNvbnN0IGNvdW50ID0gYXdhaXQgcmVxdWVzdCh7XG4gICAgICAgIG1ldGhvZDogXCJldGhfZ2V0VHJhbnNhY3Rpb25Db3VudFwiLFxuICAgICAgICBwYXJhbXM6IFtcbiAgICAgICAgICAgIHBhcmFtcy5hZGRyZXNzLFxuICAgICAgICAgICAgLy8gbWFrZXMgc2Vuc2UgdG8gZGVmYXVsdCB0byBgcGVuZGluZ2AgaGVyZSwgc2luY2Ugd2UncmUgYXNraW5nIGZvciBhIHRyYW5zYWN0aW9uIGNvdW50IChub25jZSlcbiAgICAgICAgICAgIHBhcmFtcy5ibG9ja051bWJlclxuICAgICAgICAgICAgICAgID8gbnVtYmVyVG9IZXgocGFyYW1zLmJsb2NrTnVtYmVyKVxuICAgICAgICAgICAgICAgIDogcGFyYW1zLmJsb2NrVGFnIHx8IFwicGVuZGluZ1wiLFxuICAgICAgICBdLFxuICAgIH0pO1xuICAgIHJldHVybiBoZXhUb051bWJlcihjb3VudCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldGhfZ2V0VHJhbnNhY3Rpb25Db3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getTransactionCount.js\n"));

/***/ })

}]);